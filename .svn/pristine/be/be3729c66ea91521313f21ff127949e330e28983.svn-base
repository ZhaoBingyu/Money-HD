import {Component, OnInit} from '@angular/core';
import {Router} from '@angular/router';
import {HttpClient} from '@angular/common/http';
import {
  FormBuilder,
  FormGroup,
  Validators
} from '@angular/forms';
import {CommonService} from '../../../../service/common.service';
import {CommonUrlService} from '../../../../service/common-url.service';

@Component({
  selector: 'app-my-assets',
  templateUrl: './my-assets.component.html',
  styleUrls: ['./my-assets.component.css']
})


export class MyAssetsComponent implements OnInit {
  buttonListObj: any;
  queryLoading = false;
  validateForm: FormGroup;
  resultData: any = [];
  pageVo: any = {
    currentPage: undefined,
    rows: undefined,
    totalPages: undefined,
    totalRows: undefined
  };
  roleUseScopeList: any;

  allChecked = false;
  indeterminate = false;
  displayData = [];
  data = [];
  userRoleList: any = [];


  // 理财产品List
  public productList = [{
    imgUrl: '../../../../assets/img/u11.jpg',
    name: 'e灵通净值型法人无固定期限人民币理财产品',
    desc: '',
    rate: '3'
  }, {
    imgUrl: '../../../../assets/img/u11.jpg',
    name: 'e灵通净值型法人无固定期限人民币理财产品',
    desc: '',
    rate: '4.5'
  }];

  constructor(private fb: FormBuilder,
              private http: HttpClient,
              private router: Router,
              public common: CommonService,
              public url: CommonUrlService) {
  }

  ngOnInit() {
    this.buttonListObj = this.common.buttonListObj;
    this.common.authBtnList();
    this.validateForm = this.fb.group({
      enumType: [null],
      enumName: [null],
      enumParentName: [null],
      enumCode: [null],
      status: [null]
    });
    // this.querySubmit();
  }


//  查询
  querySubmit() {
    this.userRoleList = [];
    const sendData = {
      enumType: this.validateForm.controls.enumType.value,
      enumName: this.validateForm.controls.enumName.value,
      enumParentName: this.validateForm.controls.enumParentName.value,
      status: this.validateForm.controls.status.value,
    };
    try {
      this.userRoleList = JSON.parse(this.common.selectEnumList(sendData).dataList[0]);
      for (let i = 0; i < this.userRoleList.length; i++) {
        if (this.userRoleList[i].status === 'S') {
          this.userRoleList[i].statusText = '有效';
        } else {
          this.userRoleList[i].statusText = '无效';
        }
      }
    } catch (e) {
      console.log(e);
    }
    this.resultData = this.data;
    this.queryLoading = false;
  }


//  延时查询
  delayQuerySubmit() {
    this.queryLoading = true;
    setTimeout(() => {
      this.querySubmit();
    }, 20);
  }

//  重置
  resetBtn() {
    this.validateForm.reset();
  }

  freshRoleInfoList($event) {
    // console.log($event);
    if ($event.code === '2000') {
      this.querySubmit();
    }
  }

  currentPageDataChange($event: Array<{ name: string; age: number; address: string; checked: boolean; disabled: boolean; }>): void {
    this.displayData = $event;
    this.refreshStatus();
  }

  refreshStatus(): void {
    const allChecked = this.displayData.filter(value => !value.disabled).every(value => value.checked === true);
    const allUnChecked = this.displayData.filter(value => !value.disabled).every(value => !value.checked);
    this.allChecked = allChecked;
    this.indeterminate = (!allChecked) && (!allUnChecked);
  }

  checkAll(value: boolean): void {
    this.displayData.forEach(data => {
      if (!data.disabled) {
        data.checked = value;
      }
    });
    this.refreshStatus();
  }

  goApplyPurchase(item) {
    console.log(item);
    this.router.navigate(['/home/applyForPurchase']);
  }

  goRedeemPurchase(item) {
    console.log(item);
    this.router.navigate(['/home/redeemPurchase']);
  }

}

